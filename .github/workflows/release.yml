name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Get Version
      id: get_version
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}" -replace '^v',''
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Build
      run: dotnet build -c Release /p:Version=${{ steps.get_version.outputs.version }}

    - name: Create Release ZIP
      shell: pwsh
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        $zipName = "AddToPath-v${version}-win-x64.zip"
        # First check if files exist
        Get-ChildItem -Path "bin/Release" -ErrorAction Continue
        # Create a temporary directory for the release
        New-Item -ItemType Directory -Path "release-temp" -Force
        # Copy executables
        Copy-Item "bin/Release/*" -Destination "release-temp" -Recurse
        # Process and include README files
        if (Test-Path "README.md") {
            # Create README.md with absolute image URLs
            $readme = Get-Content "README.md" -Raw
            $repoUrl = "https://raw.githubusercontent.com/nsxdavid/AddToPath/${{ github.sha }}"
            $readme = $readme -replace '(!\[.*?\])\((src/.*?)\)', "`$1($repoUrl/`$2)"
            Set-Content -Path "release-temp/README.md" -Value $readme -Encoding UTF8
            
            # Create plain text README.txt
            # Remove HTML tags and alignment
            $readme = $readme -replace '<[^>]+>', '' `
                            -replace '\s*<p[^>]*>\s*', "`r`n" `
                            -replace '\s*</p>\s*', "`r`n"
            # Remove image references and badges
            $readme = $readme -replace '!\[[^\]]*\]\([^\)]+\)', '' `
                            -replace '\[\![^\]]*\]\([^\)]+\)', ''
            # Remove Markdown formatting
            $readme = $readme -replace '#+ ', '' `
                            -replace '\[([^\]]+)\]\([^\)]+\)', '$1' `
                            -replace '\*\*([^\*]+)\*\*', '$1' `
                            -replace '`([^`]+)`', '$1' `
                            -replace '_([^_]+)_', '$1' `
                            -replace '\*([^\*]+)\*', '$1'
            # Fix code blocks
            $readme = $readme -replace '```\w*\s*', '' `
                            -replace '```\s*', ''
            # Clean up multiple blank lines and trim
            $readme = $readme -replace '(\r?\n\s*){3,}', "`r`n`r`n"
            $readme = $readme.Trim()
            Set-Content -Path "release-temp/README.txt" -Value $readme -Encoding UTF8
        }
        if (Test-Path "LICENSE") {
            Copy-Item "LICENSE" -Destination "release-temp/LICENSE.txt"
        }
        # Create ZIP with all files
        Compress-Archive -Path "release-temp/*" -DestinationPath $zipName -Force
        # Cleanup
        Remove-Item "release-temp" -Recurse -Force

    - name: Generate Release Notes
      id: release_notes
      shell: pwsh
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        $notes = @"
        ## AddToPath v${version}

        ### New Features
        - 

        ### Improvements
        - 

        ### Bug Fixes
        - 

        ### Installation Instructions
        1. Download `AddToPath-v${version}-win-x64.zip`
        2. Extract the ZIP file to any location
        3. Run `AddToPath.exe` - no installation needed
        4. Note: You may need to approve UAC prompt when the app modifies PATH
        "@

        $notes | Out-File release_notes.md -Encoding UTF8

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        body_path: release_notes.md
        files: AddToPath-v${{ steps.get_version.outputs.version }}-win-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
